# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.
#spring.datasource.data= # Data (DML) script resource reference.
#spring.datasource.data-username= # User of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
#spring.datasource.dbcp.*= # Commons DBCP specific settings
#spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
#spring.datasource.generate-unique-name=false # Generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
#spring.datasource.initialize=true # Populate the database using 'data.sql'.
#spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.name=testdb # Name of the datasource.
#spring.datasource.platform=all # Platform to use in the schema resource (schema-${platform}.sql).
#spring.datasource.schema= # Schema (DDL) script resource reference.
#spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
#spring.datasource.separator=; # Statement separator in SQL initialization scripts.
#spring.datasource.sql-script-encoding= # SQL scripts encoding.
#spring.datasource.tomcat.*= # Tomcat datasource specific settings
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
spring.datasource.url=jdbc:mysql://182.254.217.94:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=test
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver




# MyBatis
#spring.config-location # MyBatis xml config file (optional)
#spring.check-config-location #Indicates whether perform presence check of the MyBatis xml config file (optional)
#spring.mapper-locations #Mapper xml config files (optional)
#spring.type-aliases-package #Package to search for type aliases (optional)
#spring.type-handlers-package #Package to search for type aliases (optional)
#spring.executor-type #Executor type: SIMPLE, REUSE, BATCH (optional)
#spring.configuration-properties #Externalized properties for MyBatis configuration (optional). Specified properties can be used as placeholder on MyBatis config file and Mapper file. For detail see the MyBatis reference page
#spring.configuration #A MyBatis Configuration bean. About available properties see the MyBatis reference page. NOTE This property cannot be used at the same time with the config-location.


# LOGGING
logging.config= src/main/resources/log4j2.xml
# Location of the logging configuration file. For instance `classpath:logback.xml` for Logback

#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.file= # Log file name. For instance `myapp.log`
#logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
#logging.path= # Location of the log file. For instance `/var/log`
#logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.
#logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.